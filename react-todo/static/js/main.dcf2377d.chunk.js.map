{"version":3,"sources":["components/TodoListTemplate.js","components/Form.js","components/TodoItem.js","components/TodoItemList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoListTemplate","form","children","className","Form","value","onAppChange","onCreate","onAppKey","onChange","onKeyPress","onClick","TodoItem","this","props","text","id","onRemove","onToggle","checked","e","stopPropagation","Component","TodoItemList","todos","onRemovep","onTogglep","todoList","map","App","state","input","setState","target","listAdd","console","log","concat","listRemove","filter","todo","listToggle","index","findIndex","selected","newTodos","onKeyEnter","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcf2377d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoListTemplate.css\";\r\n\r\n\r\nconst TodoListTemplate = ({form, children}) => {\r\n  return(\r\n    <div className=\"todo-wrap\">\r\n      <div className=\"title\">TO DO LIST</div>\r\n      <section className=\"form-wrapper\">\r\n        {form}\r\n      </section>\r\n      <section className=\"todos-wrapper\">\r\n        {children}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoListTemplate;","import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = ({value,onAppChange,onCreate,onAppKey}) => {\r\n  return(\r\n    <div className=\"inputForm\">\r\n      <input value={value} onChange={onAppChange} onKeyPress={onAppKey}></input>\r\n      <button className=\"addButton\" onClick={onCreate}>추가</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","import React, { Component } from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends Component{\r\n  render(){\r\n    //1. this.props.text\r\n    //2. const text = this.props;\r\n    //3. this. props.text를 text에 넣어라\r\n    const {text,id,onRemove,onToggle,checked} = this.props;\r\n\r\n    return( \r\n      <div className=\"todoItem\" onClick={()=>onToggle(id)}>\r\n        <div className=\"remove\" onClick={(e)=>{e.stopPropagation(); onRemove(id)}}>X</div>\r\n        <div className={`todoText ${checked && 'checked'}`}>\r\n          {/*1. {this.props.text} */}\r\n          {/*2. {text.text} */}\r\n          {/* 3. {text} */}\r\n          {text}\r\n        </div>\r\n        <div className=\"check\">check</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoItemList extends Component{\r\n  render(){\r\n    const {todos,onRemovep,onTogglep} = this.props;\r\n    const todoList = todos.map(\r\n      ({id,text,checked}) => (\r\n        <TodoItem id={id} text={text} checked={checked} key={id} onRemove={onRemovep} onToggle={onTogglep} />\r\n      )\r\n    )\r\n    return(\r\n      <div>\r\n        {todoList}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","// import logo from './logo.svg';\n// import './App.css';\nimport React, {Component} from \"react\";\nimport TodoListTemplate from \"./components/TodoListTemplate\";\nimport Form from \"./components/Form\";\nimport TodoItemList from \"./components/TodoItemList\";\n\n\nclass App extends Component{\n  //할일을 체크할 변수 만들기\n  id = 3;\n  state = {\n    input:\"\",\n    todos:[\n      {id:0,text:\"리액트 정리하기\",checked:false},\n      {id:1,text:\"프로젝트 정리\",checked:false},\n      {id:2,text:\"이력서 쓰기 배열\",checked:false}\n    ]\n  }\n\n  onChange = (e) => {\n    this.setState({\n      input:e.target.value\n    })\n  }\n\n  listAdd = (e) => {\n    const {input,todos} = this.state;\n    console.log(\"add\");\n    this.setState({\n      input:\"\",\n      todos:todos.concat({\n        id: this.id++,\n        text:input,\n        checked:false\n      })\n    })\n  }\n\n  listRemove = (id) => {\n    this.setState({\n      todos:this.state.todos.filter(todo => todo.id !== id)\n    })\n  }\n\n  listToggle = (id) =>{\n    //id로 받은 요소의 값이 몇번째인지 찾아서 그 값에 해당하는 요소의 checked값을 반전 findIndex순서 찾기\n    const index = this.state.todos.findIndex(todo => todo.id === id);\n    //index번째 요소값을 저장할 변수\n    const selected = this.state.todos[index];\n    //checked 속성만 반전해서 저장할 배열 만들기\n    //todos 배열을 복사\n    //배열 전체 복사하기 [...배열명]\n    var newTodos = [...this.state.todos];\n    newTodos[index] = {\n      ...selected,\n      checked : !selected.checked\n    }\n\n    this.setState({\n      todos:newTodos\n    })\n  }\n\n  onKeyEnter = (e) => {\n    console.log(\"enter\")\n    if(e.key === \"Enter\"){\n      this.listAdd();\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <TodoListTemplate form={<Form value={this.state.input} onAppChange={this.onChange} onCreate={this.listAdd} onAppKey={this.onKeyEnter} />}>\n          <TodoItemList todos={this.state.todos} onRemovep={this.listRemove} onTogglep={this.listToggle} />\n        </TodoListTemplate>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}